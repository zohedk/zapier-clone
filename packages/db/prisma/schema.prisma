// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  authType  String   @default("credential")
  password  String?
  zaps      Zap[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Zap {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  trigger   Trigger?
  actions   Action[]
  zapRuns   ZapRun[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Trigger {
  id            String           @id @default(uuid())
  zap           Zap              @relation(fields: [zapId], references: [id])
  zapId         String           @unique
  triggerType   AvailabelTrigger @relation(fields: [triggerTypeId], references: [id])
  triggerTypeId String
}

model Action {
  id             String          @id @default(uuid())
  zap            Zap             @relation(fields: [zapId], references: [id])
  zapId          String
  actionType     AvailabelAction @relation(fields: [actionTypeId], references: [id])
  actionTypeId   String
  executionOrder Int             @default(0)
}

model AvailabelTrigger {
  id       String    @id @default(uuid())
  name     String
  triggers Trigger[]
}

model AvailabelAction {
  id      String   @id @default(uuid())
  name    String
  actions Action[]
}

model ZapRun {
  id           String        @id @default(uuid())
  metadata     Json
  zap          Zap           @relation(fields: [zapId], references: [id])
  zapId        String
  zapRunOutbox ZapRunOutobx?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt()
}

model ZapRunOutobx {
  id String @id @default(uuid())

  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id])
}
